datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  @@map("users")

  id String @id @db.Uuid @default(uuid())

  email String @unique

  profile Profile?

  projects Project[]

  albums Album[]

  googleId String? @unique @map("google_id")

  facebookId String? @unique @map("facebook_id")

  Favorite Favorite[]
}

model Profile {
  @@map("profiles")

  id String @id @db.Uuid @default(uuid())

  nickname String? @unique

  user User @relation(fields: [userId], references: [id])

  userId String @db.Uuid @unique @map("user_id")

  summary String?

  socialLinks String[]
}

enum ProjectStatus {
  PUBLISHED
  DRAFT
}

model Project {
  @@map("projects")

  id String @id @db.Uuid @default(uuid())

  user User @relation(fields: [userId], references: [id])

  userId String @db.Uuid @map("user_id")

  items ProjectItem[]

  name String

  slug String?

  caption String?

  status ProjectStatus @default(DRAFT)

  preview String?

  createdAt DateTime @default(now()) @map("created_at")

  albums Album[]

  @@unique([userId, slug])

  Favorite Favorite[]
}

enum ProjectItemType {
  IMAGE
  YOUTUBE
}

model ProjectItem {
  @@map("project_items")

  id String @id @db.Uuid @default(uuid())

  project Project @relation(fields: [projectId], references: [id])

  projectId String @db.Uuid @map("project_id")

  title String?

  caption String?

  type ProjectItemType

  value String
}

model Favorite {
  @@map("favorites")

  projectId String @db.Uuid
  userId String @db.Uuid

  project Project @relation(fields: [projectId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@id([projectId, userId])
}

model Album {
  @@map("albums")

  id String @id @db.Uuid @default(uuid())

  name String

  projects Project[]

  user User @relation(fields: [userId], references: [id])

  userId String @db.Uuid @map("user_id")
}
